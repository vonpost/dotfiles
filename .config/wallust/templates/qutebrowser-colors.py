"""Autogenerated qutebrowser colors from the current wallust palette.

This file is meant to be sourced from qutebrowser's config.py via
`config.source('colors.py')`.
"""

palette = {
    "background": "{{background}}",
    "background_alt": "{{color0}}",
    "background_highlight": "{{color8}}",
    "foreground": "{{foreground}}",
    "foreground_alt": "{{color7}}",
    "primary": "{{color4}}",
    "secondary": "{{color5}}",
    "success": "{{color2}}",
    "warning": "{{color3}}",
    "error": "{{color1}}",
}

try:
    config  # type: ignore[name-defined]
    c  # type: ignore[name-defined]
except NameError as exc:  # pragma: no cover - helps catch manual execution
    raise RuntimeError(
        "qutebrowser colors template must be loaded from within config.py"
    ) from exc

bg = palette["background"]
bg_alt = palette["background_alt"]
bg_hi = palette["background_highlight"]
fg = palette["foreground"]
fg_alt = palette["foreground_alt"]
primary = palette["primary"]
secondary = palette["secondary"]
success = palette["success"]
warning = palette["warning"]
error = palette["error"]

# Completion
c.colors.completion.fg = fg
c.colors.completion.match.fg = primary
c.colors.completion.category.bg = bg_alt
c.colors.completion.category.border.bottom = bg_alt
c.colors.completion.category.border.top = bg_alt
c.colors.completion.category.fg = fg_alt
c.colors.completion.even.bg = bg
c.colors.completion.odd.bg = bg_alt
c.colors.completion.item.selected.bg = bg_hi
c.colors.completion.item.selected.border.bottom = bg_hi
c.colors.completion.item.selected.border.top = bg_hi
c.colors.completion.item.selected.fg = fg
c.colors.completion.item.selected.match.fg = primary
c.colors.completion.scrollbar.bg = bg_alt
c.colors.completion.scrollbar.fg = primary

# Statusbar
c.colors.statusbar.normal.bg = bg
c.colors.statusbar.normal.fg = fg
c.colors.statusbar.insert.bg = success
c.colors.statusbar.insert.fg = bg
c.colors.statusbar.command.bg = bg_alt
c.colors.statusbar.command.fg = fg_alt
c.colors.statusbar.command.private.bg = bg_alt
c.colors.statusbar.command.private.fg = secondary
c.colors.statusbar.passthrough.bg = secondary
c.colors.statusbar.passthrough.fg = bg
c.colors.statusbar.caret.bg = secondary
c.colors.statusbar.caret.fg = bg
c.colors.statusbar.caret.selection.bg = error
c.colors.statusbar.caret.selection.fg = bg
c.colors.statusbar.progress.bg = primary
c.colors.statusbar.url.success.http.fg = success
c.colors.statusbar.url.success.https.fg = success
c.colors.statusbar.url.hover.fg = primary
c.colors.statusbar.url.error.fg = error
c.colors.statusbar.url.warn.fg = warning

# Tabs
c.colors.tabs.bar.bg = bg_alt
c.colors.tabs.even.bg = bg_alt
c.colors.tabs.even.fg = fg
c.colors.tabs.odd.bg = bg
c.colors.tabs.odd.fg = fg_alt
c.colors.tabs.selected.even.bg = primary
c.colors.tabs.selected.even.fg = bg
c.colors.tabs.selected.odd.bg = primary
c.colors.tabs.selected.odd.fg = bg
c.colors.tabs.indicator.start = primary
c.colors.tabs.indicator.stop = success
c.colors.tabs.indicator.error = error
c.colors.tabs.pinned.even.bg = secondary
c.colors.tabs.pinned.even.fg = bg
c.colors.tabs.pinned.odd.bg = secondary
c.colors.tabs.pinned.odd.fg = bg

# Downloads
c.colors.downloads.bar.bg = bg_alt
c.colors.downloads.start.bg = primary
c.colors.downloads.start.fg = bg
c.colors.downloads.stop.bg = success
c.colors.downloads.stop.fg = bg
c.colors.downloads.error.bg = error
c.colors.downloads.error.fg = bg

# Prompts, hints, messages
c.colors.hints.bg = warning
c.colors.hints.fg = bg
c.colors.hints.match.fg = bg
c.hints.border = f"1px solid {bg}"
c.colors.prompts.bg = bg_alt
c.colors.prompts.border = f"1px solid {primary}"
c.colors.prompts.fg = fg
c.colors.prompts.selected.bg = primary
c.colors.prompts.selected.fg = bg
c.colors.messages.info.bg = bg_alt
c.colors.messages.info.fg = fg
c.colors.messages.info.border = primary
c.colors.messages.warning.bg = warning
c.colors.messages.warning.fg = bg
c.colors.messages.warning.border = warning
c.colors.messages.error.bg = error
c.colors.messages.error.fg = bg
c.colors.messages.error.border = error

# Keyhints and webpages
c.colors.keyhint.bg = bg_hi
c.colors.keyhint.fg = fg
c.colors.keyhint.suffix.fg = primary
c.colors.webpage.bg = bg
c.colors.webpage.preferred_color_scheme = "dark"
